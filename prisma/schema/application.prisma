// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// !! ------------------------------------------------------------ //
// !!                       [Prisma] Issues                        //
// !! ------------------------------------------------------------ //
// * https://github.com/prisma/prisma/issues/4355                  //
// * ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ //

generator client {
  provider = "prisma-client-js"

  // Enable Full-Text Search which is only available for PostgreSQL.
  previewFeatures = ["multiSchema", "fullTextSearch", "prismaSchemaFolder"]

  // For production deployment.
  // binaryTargets   = ["native", "rhel-openssl-1.0.x"]
  // binaryTargets   = ["native", "linux-arm64-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["application", "microservice/account", "microservice/cloudformation", "microservice/cron", "microservice/event-scheduling", "microservice/map", "microservice/notification", "microservice/order-mgmt", "microservice/project-mgmt", "microservice/queue", "microservice/stock-mgmt", "microservice/storage", "microservice/tag", "microservice/workflow", "microservice/people-finder", "microservice/shortcut"]
}

model Currency {
  id               Int      @id @default(autoincrement())
  name             String   @unique
  delisted         Boolean
  withdrawDisabled Boolean
  withdrawDelayed  Boolean
  depositDisabled  Boolean
  tradeDisabled    Boolean
  fixedRate        String?
  chain            String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@schema("application")
}

model CurrencyPair {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  base            String
  quote           String
  fee             String?
  minBaseAmount   String?
  minQuoteAmount  String?
  maxBaseAmount   String?
  maxQuoteAmount  String?
  amountPrecision Int?
  precision       Int?
  tradeStatus     String // untradable, buyable, sellable, tradable
  sellStart       Int // 允许卖出时间，秒级 Unix 时间戳
  buyStart        Int // 允许买入时间，秒级 Unix 时间戳
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@schema("application")
}

model TradeTask {
  id          Int      @id @default(autoincrement())
  status      String   @default("waiting") // waiting, complete
  base        String
  quote       String
  quoteAmount Float
  buyStart    Int // 允许买入时间，秒级 Unix 时间戳
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@schema("application")
}

model Order {
  id                 String   @id
  text               String
  currencyPair       String
  type               String
  account            String
  side               String
  amount             Float
  timeInForce        String
  createdTime        Int // 秒级 Unix 时间戳
  createdTimeMs      BigInt // 毫秒级 Unix 时间戳
  filledAmount       Float
  fillPrice          Float
  filledTotal        Float
  avgDealPrice       Float
  fee                Float
  feeCurrency        String
  pointFee           Float
  gtFee              Float
  gtMakerFee         Float
  gtTakerFee         Float
  gtDiscount         Boolean
  rebatedFee         Float
  rebatedFeeCurrency String
  finishAs           String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@schema("application")
}
