// ! ------------------------------------------------------------ //
// !               [Application] Engine D models                  //
// ! ------------------------------------------------------------ //
// * PostgresqlDatasource                                         //
// * PostgresqlDatasourceConstraint                               //
// * PostgresqlDatasourceTable                                    //
// * PostgresqlDatasourceTableColumn                              //
// * ------------------------------------------------------------ //
// * ElasticsearchDatasource                                      //
// * ElasticsearchDatasourceIndex                                 //
// * ElasticsearchDatasourceIndexField                            //
// * ------------------------------------------------------------ //
// * DatatransPipeline                                            //
// * DatatransMission                                             //
// * ------------------------------------------------------------ //
// * ElasticsearchDataboard                                       //
// * ElasticsearchDataboardColumn                                 //
// * ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄  //

model PostgresqlDatasource {
  id          String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  host        String
  port        Int
  database    String
  schema      String
  state       PostgresqlDatasourceState        @default(NOT_LOADED)
  createdAt   DateTime                         @default(now())
  updatedAt   DateTime                         @updatedAt
  tables      PostgresqlDatasourceTable[]
  constraints PostgresqlDatasourceConstraint[]

  @@schema("application/engined")
}

enum PostgresqlDatasourceState {
  LOADED
  NOT_LOADED

  @@schema("application/engined")
}

model PostgresqlDatasourceConstraint {
  id           Int                                   @id @default(autoincrement())
  schema       String // The schema name.
  table        String // The table name.
  keyColumn    String // The table's primary key column or foreign key column.
  keyType      PostgresqlDatasourceConstraintKeyType
  foreignTable String? // Has value when the type is FOREIGN_KEY. 
  createdAt    DateTime                              @default(now())
  updatedAt    DateTime                              @updatedAt
  datasource   PostgresqlDatasource                  @relation(fields: [datasourceId], references: [id], onDelete: Cascade)
  datasourceId String                                @db.Uuid

  @@schema("application/engined")
}

enum PostgresqlDatasourceConstraintKeyType {
  PRIMARY_KEY
  FOREIGN_KEY

  @@schema("application/engined")
}

model PostgresqlDatasourceTable {
  id                 Int                               @id @default(autoincrement())
  name               String
  schema             String
  createdAt          DateTime                          @default(now())
  updatedAt          DateTime                          @updatedAt
  datasource         PostgresqlDatasource              @relation(fields: [datasourceId], references: [id], onDelete: Cascade)
  datasourceId       String                            @db.Uuid
  columns            PostgresqlDatasourceTableColumn[]
  datatransPipelines DatatransPipeline[]

  @@schema("application/engined")
}

model PostgresqlDatasourceTableColumn {
  id              Int                       @id @default(autoincrement())
  name            String // The column name.
  type            String
  constraint      String?
  ordinalPosition Int? // The sort number of the column in the table.
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
  table           PostgresqlDatasourceTable @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tableId         Int

  @@schema("application/engined")
}

model ElasticsearchDatasource {
  id        String                         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  node      String
  state     ElasticsearchDatasourceState   @default(NOT_LOADED)
  createdAt DateTime                       @default(now())
  updatedAt DateTime                       @updatedAt
  indices   ElasticsearchDatasourceIndex[]

  @@schema("application/engined")
}

enum ElasticsearchDatasourceState {
  LOADED
  NOT_LOADED

  @@schema("application/engined")
}

model ElasticsearchDatasourceIndex {
  id                 Int                                 @id @default(autoincrement())
  name               String
  state              ElasticsearchDatasourceIndexState   @default(NO_MAPPING)
  createdAt          DateTime                            @default(now())
  updatedAt          DateTime                            @updatedAt
  datasource         ElasticsearchDatasource             @relation(fields: [datasourceId], references: [id], onDelete: Cascade)
  datasourceId       String                              @db.Uuid
  fields             ElasticsearchDatasourceIndexField[]
  databoards         ElasticsearchDataboard[]
  datatransPipelines DatatransPipeline[]

  @@schema("application/engined")
}

enum ElasticsearchDatasourceIndexState {
  NO_MAPPING
  HAS_MAPPING

  @@schema("application/engined")
}

model ElasticsearchDatasourceIndexField {
  id               Int                            @id @default(autoincrement())
  name             String // The field name. 
  type             String?
  fields           Json?
  properties       Json?
  createdAt        DateTime                       @default(now())
  updatedAt        DateTime                       @updatedAt
  index            ElasticsearchDatasourceIndex   @relation(fields: [indexId], references: [id], onDelete: Cascade)
  indexId          Int
  databoardColumns ElasticsearchDataboardColumn[]

  @@schema("application/engined")
}

model DatatransPipeline {
  id                String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String
  hasManyTables     String[] // The child tables should be loaded into the payload to be transported.
  belongsToTables   String[] // The parent tables should be loaded into the payload to be transported.
  createdAt         DateTime                     @default(now())
  updatedAt         DateTime                     @updatedAt
  fromTable         PostgresqlDatasourceTable    @relation(fields: [fromTableId], references: [id], onDelete: Cascade)
  fromTableId       Int
  toIndex           ElasticsearchDatasourceIndex @relation(fields: [toIndexId], references: [id])
  toIndexId         Int
  datatransMissions DatatransMission[]

  @@schema("application/engined")
}

model DatatransMission {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  state               DatatransMissionState @default(PENDING)
  numberOfRecords     Int // Number of records that will be sent from datasource table
  numberOfBatches     Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  datatransPipeline   DatatransPipeline     @relation(fields: [datatransPipelineId], references: [id])
  datatransPipelineId String                @db.Uuid
  tasks               DatatransTask[]

  @@schema("application/engined")
}

enum DatatransMissionState {
  PENDING
  SPLIT
  STARTED
  STOPPED

  @@schema("application/engined")
}

model DatatransTask {
  id           Int                @id @default(autoincrement())
  state        DatatransTaskState @default(PENDING)
  take         Int
  skip         Int
  sqsMessageId String?
  sqsResponse  Json?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  mission      DatatransMission   @relation(fields: [missionId], references: [id], onDelete: Cascade)
  missionId    String             @db.Uuid

  @@schema("application/engined")
}

enum DatatransTaskState {
  PENDING
  IN_QUEUE
  DONE

  @@schema("application/engined")
}

model ElasticsearchDataboard {
  id                String                         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String
  state             ElasticsearchDataboardState    @default(NOT_LOADED)
  description       String?
  createdAt         DateTime                       @default(now())
  updatedAt         DateTime                       @updatedAt
  datasourceIndex   ElasticsearchDatasourceIndex   @relation(fields: [datasourceIndexId], references: [id])
  datasourceIndexId Int
  columns           ElasticsearchDataboardColumn[]

  @@schema("application/engined")
}

enum ElasticsearchDataboardState {
  LOADED
  NOT_LOADED

  @@schema("application/engined")
}

model ElasticsearchDataboardColumn {
  id                     Int                                   @id @default(autoincrement())
  name                   String
  ordinalPosition        Int? // The sort number of the column on the board. The first position is 1.
  visible                Boolean                               @default(true)
  width                  Int?
  copyable               Boolean?
  searchable             Boolean?
  sortable               Boolean?
  tooltip                String?
  formatter              ElasticsearchDataboardColumnFormatter @default(NONE)
  createdAt              DateTime                              @default(now())
  updatedAt              DateTime                              @updatedAt
  databoard              ElasticsearchDataboard                @relation(fields: [databoardId], references: [id], onDelete: Cascade)
  databoardId            String                                @db.Uuid
  datasourceIndexField   ElasticsearchDatasourceIndexField     @relation(fields: [datasourceIndexFieldId], references: [id])
  datasourceIndexFieldId Int

  @@schema("application/engined")
}

enum ElasticsearchDataboardColumnFormatter {
  NONE
  OVER_DUE
  PAST_DUE
  DATE_TIME
  HIGHLIGHT_INCOMPLETE
  CURRENCY

  @@schema("application/engined")
}
