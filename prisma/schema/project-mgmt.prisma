// ! ------------------------------------------------------------ //
// !          [Microservice] Project Management models             //
// ! ------------------------------------------------------------ //
// * Project                                                      //
// * ProjectNote                                                  //
// * ProjectEnvironment                                           //
// * ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄  //

// enum ProjectCheckpoint {
//   MANAGER_PRODUCT_REQUIREMENTS
//   MANAGER_PROJECT_KANBAN
//   DESIGNER_WIREFRAMES
//   DESIGNER_PROTOTYPES
//   DEVELOPER_ACCOUNT_APPLE
//   DEVELOPER_ACCOUNT_GOOGLE
//   DEVELOPER_BACKEND_REPO
//   DEVELOPER_BACKEND_FRAMEWORK
//   DEVELOPER_BACKEND_DATABASE
//   DEVELOPER_BACKEND_API
//   DEVELOPER_FRONTEND_REPO
//   DEVELOPER_FRONTEND_FRAMEWORK
//   DEVELOPER_INFRASTRUCTURE

//   @@schema("microservice/project-mgmt")
// }

model Project {
  id        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String        @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  notes     ProjectNote[]

  @@schema("microservice/project-mgmt")
}

model ProjectNote {
  id        Int      @id @default(autoincrement())
  section   String?
  label     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String?  @db.Uuid

  @@schema("microservice/project-mgmt")
}
